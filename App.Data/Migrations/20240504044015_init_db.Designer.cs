// <auto-generated />
using System;
using App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Data.Migrations
{
    [DbContext(typeof(WebAppDbContext))]
    [Migration("20240504044015_init_db")]
    partial class init_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.Data.Entities.AppBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IdMap")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppBranch", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "91 Trần Văn Khéo, Cái Khế, Ninh Kiều, Cần Thơ",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5277),
                            GroupName = "Thành Phố Cần Thơ",
                            IdMap = "113.188.249.73"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppDiscountCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinDiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnApplyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppDiscountCode", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.AppNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImgThumbnailPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Published")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SEOImagePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SEOKeyword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SEOTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StampPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<long>("Views")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<float>("Votes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Slug" }, "uq_slug")
                        .IsUnique();

                    b.ToTable("AppNews", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.AppNewsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppNewsCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6531),
                            Slug = "tin-tuc-apple",
                            Title = "Tin tức Apple"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6531),
                            Slug = "bai-viet-review",
                            Title = "Bài viết Review"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6531),
                            Slug = "kham-pha",
                            Title = "Khám phá"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6531),
                            Slug = "thu-thuat",
                            Title = "Thủ thuật"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6531),
                            Slug = "khuyen-mai",
                            Title = "Khuyến mãi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6531),
                            Slug = "tin-khac",
                            Title = "Tin khác"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CusEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CusNote")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CusPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DiscountCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DiscountCodeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StatusId");

                    b.ToTable("AppOrder", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.AppOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("AppOrderDetail", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.AppPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImgPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CoverImgThumbnailPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("Like")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppPolicy", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.AppProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CateLevel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CoverImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("HasChild")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentCateId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StampPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentCateId");

                    b.ToTable("AppProductCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CateLevel = 1,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = true,
                            Name = "Iphone",
                            Slug = "iphone",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 2,
                            CateLevel = 1,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = true,
                            Name = "IPad",
                            Slug = "ipad",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 3,
                            CateLevel = 1,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = true,
                            Name = "Mac",
                            Slug = "mac",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 4,
                            CateLevel = 1,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = true,
                            Name = "Watch",
                            Slug = "watch",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 5,
                            CateLevel = 1,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = true,
                            Name = "Phụ kiện",
                            Slug = "phu-kien",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 6,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "Chuột/ Bàn phím",
                            ParentCateId = 5,
                            Slug = "chuot-ban-phim",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 7,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "Óp lưng",
                            ParentCateId = 5,
                            Slug = "op-lung",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 8,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "Balo/ Túi chống sốc",
                            ParentCateId = 5,
                            Slug = "balo-tui-chong-soc",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 9,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "Ốp lưng",
                            ParentCateId = 5,
                            Slug = "op-lung",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 10,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "Kính cường lực",
                            ParentCateId = 5,
                            Slug = "kinh-cuong-luc",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 11,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "Apple Watch Ultra 2",
                            ParentCateId = 4,
                            Slug = "apple-watch-ultra-2",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 12,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "Apple Watch SE",
                            ParentCateId = 4,
                            Slug = "apple-watch-se",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 13,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "MacBook Pro",
                            ParentCateId = 3,
                            Slug = "macbook-pro",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 14,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "MacBook Air",
                            ParentCateId = 3,
                            Slug = "macbook-air",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 15,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "MacBook Pro M1",
                            ParentCateId = 3,
                            Slug = "macbook-pro-m1",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 16,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "MacBook Pro M2",
                            ParentCateId = 3,
                            Slug = "macbook-pro-m2",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 17,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IMac",
                            ParentCateId = 3,
                            Slug = "imac",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 18,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPad Pro M1",
                            ParentCateId = 2,
                            Slug = "ipad-pro-m1",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 19,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPad Pro M2",
                            ParentCateId = 2,
                            Slug = "ipad-pro-m2",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 20,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPad Air",
                            ParentCateId = 2,
                            Slug = "ipad-air",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 21,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPad Mini",
                            ParentCateId = 2,
                            Slug = "ipad-mini",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 22,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPhone 15 series",
                            ParentCateId = 1,
                            Slug = "iphone-15-series",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 23,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPhone 14 series",
                            ParentCateId = 1,
                            Slug = "iphone-14-series",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 24,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPhone 13 series",
                            ParentCateId = 1,
                            Slug = "iphone-13-series",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 25,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPhone 12 series",
                            ParentCateId = 1,
                            Slug = "iphone-12-series",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 26,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPhone 11 series",
                            ParentCateId = 1,
                            Slug = "iphone-11-series",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 27,
                            CateLevel = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328),
                            HasChild = false,
                            Name = "IPhone SE",
                            ParentCateId = 1,
                            Slug = "iphone-se",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(5328)
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanDelete = false,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4377),
                            Desc = "Khách hàng",
                            Name = "Khách hàng",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4377)
                        },
                        new
                        {
                            Id = 2,
                            CanDelete = true,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4377),
                            Desc = "Quản trị toàn bộ hệ thống",
                            Name = "Quản trị hệ thống",
                            UpdatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4377)
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("MstPermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("MstPermissionId");

                    b.ToTable("AppRolePermission", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.AppSlider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("AppSlider", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("BlockedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BlockedTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varbinary(200)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varbinary(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Thành phố Cần Thơ",
                            AppRoleId = 2,
                            Avatar = "~/Images/Avatar/default.png",
                            CreatedBy = -1,
                            CreatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hello@gmail.com",
                            FullName = "Lilocon",
                            PasswordHash = new byte[] { 137, 25, 119, 216, 60, 187, 90, 119, 54, 163, 100, 173, 95, 59, 227, 219, 81, 130, 118, 197, 19, 77, 182, 110, 58, 206, 3, 149, 13, 211, 23, 177, 85, 148, 179, 107, 9, 181, 200, 89, 205, 60, 85, 90, 185, 214, 196, 151, 127, 199, 3, 155, 154, 124, 95, 44, 247, 174, 160, 178, 245, 175, 75, 131 },
                            PasswordSalt = new byte[] { 114, 236, 14, 76, 94, 31, 112, 225, 183, 188, 207, 105, 86, 206, 201, 104, 164, 12, 188, 145, 179, 52, 126, 0, 119, 51, 250, 22, 121, 125, 250, 165, 133, 206, 76, 207, 238, 112, 113, 214, 42, 221, 213, 126, 49, 233, 106, 205, 197, 121, 248, 60, 149, 175, 100, 171, 133, 248, 72, 67, 170, 69, 102, 188, 92, 96, 203, 73, 116, 39, 63, 99, 98, 200, 243, 195, 204, 175, 69, 165, 8, 167, 107, 57, 173, 155, 78, 16, 140, 152, 207, 126, 81, 126, 3, 66, 161, 220, 66, 48, 50, 9, 206, 55, 30, 28, 90, 242, 2, 97, 160, 179, 187, 188, 1, 97, 30, 22, 11, 153, 87, 34, 29, 119, 117, 179, 103, 228 },
                            PhoneNumber = "0928666158",
                            UpdatedBy = -1,
                            UpdatedDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppVerifyCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("TokenString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppVerifyCode", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.MstOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("MstOrderStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6483),
                            Name = "Đang xử lý"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6483),
                            Name = "Đang giao hàng"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6483),
                            Name = "Đã giao hàng"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6483),
                            Name = "Đã từ chối"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.MstPermission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MstPermission", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1103,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1105,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1104,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1102,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem chi tiết quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1101,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            Id = 1006,
                            Code = "BLOCK",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Khóa người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1003,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1008,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1007,
                            Code = "UNBLOCK",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Mở khóa người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1004,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Cập nhật người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1005,
                            Code = "UPDATE_PWD",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Đổi mật khẩu",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1002,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem chi tiết người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1001,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách người dùng",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            Id = 1205,
                            Code = "MANAGER",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Quản lý file hệ thống",
                            GroupName = "Quản lý file",
                            Table = "FileManager"
                        },
                        new
                        {
                            Id = 1301,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách thương hiệu",
                            GroupName = "Quản lý thương hiệu",
                            Table = "MstProductBrand"
                        },
                        new
                        {
                            Id = 1302,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm thương hiệu",
                            GroupName = "Quản lý thương hiệu",
                            Table = "MstProductBrand"
                        },
                        new
                        {
                            Id = 1303,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa thương hiệu",
                            GroupName = "Quản lý thương hiệu",
                            Table = "MstProductBrand"
                        },
                        new
                        {
                            Id = 1304,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa thương hiệu",
                            GroupName = "Quản lý thương hiệu",
                            Table = "MstProductBrand"
                        },
                        new
                        {
                            Id = 1401,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách chi nhánh",
                            GroupName = "Quản lý chi nhánh",
                            Table = "AppBranch"
                        },
                        new
                        {
                            Id = 1402,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm chi nhánh",
                            GroupName = "Quản lý chi nhánh",
                            Table = "AppBranch"
                        },
                        new
                        {
                            Id = 1403,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa chi nhánh",
                            GroupName = "Quản lý chi nhánh",
                            Table = "AppBranch"
                        },
                        new
                        {
                            Id = 1404,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa chi nhánh",
                            GroupName = "Quản lý chi nhánh",
                            Table = "AppBranch"
                        },
                        new
                        {
                            Id = 1501,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách mã khuyến mãi",
                            GroupName = "Quản lý mã khuyến mãi",
                            Table = "AppDiscountCode"
                        },
                        new
                        {
                            Id = 1502,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm mã khuyến mãi",
                            GroupName = "Quản lý mã khuyến mãi",
                            Table = "AppDiscountCode"
                        },
                        new
                        {
                            Id = 1503,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa mã khuyến mãi",
                            GroupName = "Quản lý mã khuyến mãi",
                            Table = "AppDiscountCode"
                        },
                        new
                        {
                            Id = 1504,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa mã khuyến mãi",
                            GroupName = "Quản lý mã khuyến mãi",
                            Table = "AppDiscountCode"
                        },
                        new
                        {
                            Id = 1701,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách màu sản phẩm",
                            GroupName = "Quản lý màu sắc sản phẩm",
                            Table = "MstProductColor"
                        },
                        new
                        {
                            Id = 1702,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm màu sản phẩm",
                            GroupName = "Quản lý màu sắc sản phẩm",
                            Table = "MstProductColor"
                        },
                        new
                        {
                            Id = 1703,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa màu sản phẩm",
                            GroupName = "Quản lý màu sắc sản phẩm",
                            Table = "MstProductColor"
                        },
                        new
                        {
                            Id = 1704,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa màu sản phẩm",
                            GroupName = "Quản lý màu sắc sản phẩm",
                            Table = "MstProductColor"
                        },
                        new
                        {
                            Id = 1901,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách slider",
                            GroupName = "Quản lý slider",
                            Table = "AppSlider"
                        },
                        new
                        {
                            Id = 1902,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm slider",
                            GroupName = "Quản lý slider",
                            Table = "AppSlider"
                        },
                        new
                        {
                            Id = 1903,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa slider",
                            GroupName = "Quản lý slider",
                            Table = "AppSlider"
                        },
                        new
                        {
                            Id = 1904,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa slider",
                            GroupName = "Quản lý slider",
                            Table = "AppSlider"
                        },
                        new
                        {
                            Id = 2001,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách chính sách",
                            GroupName = "Quản lý chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            Id = 2002,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem chi tiết chính sách",
                            GroupName = "Quản lý chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            Id = 2003,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm chính sách",
                            GroupName = "Quản lý chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            Id = 2004,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa chính sách",
                            GroupName = "Quản lý chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            Id = 2005,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa chính sách",
                            GroupName = "Quản lý chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            Id = 2101,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách thể loại tin tức",
                            GroupName = "Quản lý thể loại tin tức",
                            Table = "AppNewsCategory"
                        },
                        new
                        {
                            Id = 2102,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm thể loại tin tức",
                            GroupName = "Quản lý thể loại tin tức",
                            Table = "AppNewsCategory"
                        },
                        new
                        {
                            Id = 2103,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa thể loại tin tức",
                            GroupName = "Quản lý thể loại tin tức",
                            Table = "AppNewsCategory"
                        },
                        new
                        {
                            Id = 2104,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa thể loại tin tức",
                            GroupName = "Quản lý thể loại tin tức",
                            Table = "AppNewsCategory"
                        },
                        new
                        {
                            Id = 2201,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách tin tức",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2202,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm tin tức",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2203,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa tin tức",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2204,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa tin tức",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2205,
                            Code = "PUBLIC",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Hiển thị tin tức",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2206,
                            Code = "UNPUBLIC",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Ẩn tin tức",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2207,
                            Code = "SENDMAILREGISTER",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Gửi mail cho ngươi đăng ký",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2208,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem chi tiết bài viết",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            Id = 2301,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem trang giới thiệu",
                            GroupName = "Quản lý giới thiệu công ty",
                            Table = "SystemEnv"
                        },
                        new
                        {
                            Id = 2302,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Cập nhật trang giới thiệu",
                            GroupName = "Quản lý giới thiệu công ty",
                            Table = "SystemEnv"
                        },
                        new
                        {
                            Id = 2401,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách thể loại sản phẩm",
                            GroupName = "Quản lý thể loại sản phẩm",
                            Table = "AppProductCategory"
                        },
                        new
                        {
                            Id = 2402,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm thể loại sản phẩm",
                            GroupName = "Quản lý thể loại sản phẩm",
                            Table = "AppProductCategory"
                        },
                        new
                        {
                            Id = 2403,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa thể loại sản phẩm",
                            GroupName = "Quản lý thể loại sản phẩm",
                            Table = "AppProductCategory"
                        },
                        new
                        {
                            Id = 2404,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa thể loại sản phẩm",
                            GroupName = "Quản lý thể loại sản phẩm",
                            Table = "AppProductCategory"
                        },
                        new
                        {
                            Id = 2501,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách sản phẩm",
                            GroupName = "Quản lý sản phẩm",
                            Table = "AppProduct"
                        },
                        new
                        {
                            Id = 2502,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Thêm sản phẩm",
                            GroupName = "Quản lý sản phẩm",
                            Table = "AppProduct"
                        },
                        new
                        {
                            Id = 2503,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa sản phẩm",
                            GroupName = "Quản lý sản phẩm",
                            Table = "AppProduct"
                        },
                        new
                        {
                            Id = 2504,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa sản phẩm",
                            GroupName = "Quản lý sản phẩm",
                            Table = "AppProduct"
                        },
                        new
                        {
                            Id = 2506,
                            Code = "PUBLIC",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Hiển thị sản phẩm",
                            GroupName = "Quản lý sản phẩm",
                            Table = "AppProduct"
                        },
                        new
                        {
                            Id = 2507,
                            Code = "UNPUBLIC",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Ẩn sản phẩm",
                            GroupName = "Quản lý sản phẩm",
                            Table = "AppProduct"
                        },
                        new
                        {
                            Id = 2508,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem chi tiết sản phẩm",
                            GroupName = "Quản lý sản phẩm",
                            Table = "AppProduct"
                        },
                        new
                        {
                            Id = 2601,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem danh sách đơn hàng",
                            GroupName = "Quản lý đơn hàng",
                            Table = "AppOrder"
                        },
                        new
                        {
                            Id = 2602,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xem chi tiết đơn hàng",
                            GroupName = "Quản lý đơn hàng",
                            Table = "AppOrder"
                        },
                        new
                        {
                            Id = 2603,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Sửa đơn hàng",
                            GroupName = "Quản lý đơn hàng",
                            Table = "AppOrder"
                        },
                        new
                        {
                            Id = 2604,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(4134),
                            Desc = "Xóa đơn hàng",
                            GroupName = "Quản lý đơn hàng",
                            Table = "AppOrder"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("AppProduct", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DiscountFrom")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DiscountTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<bool?>("IsMain")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("AppProductDetail", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("AppProductImage", (string)null);
                });

            modelBuilder.Entity("App.Data.Entities.Products.MstProductColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CssColor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MstProductColor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorName = "Red",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6509),
                            CssColor = "#FF0000"
                        },
                        new
                        {
                            Id = 2,
                            ColorName = "Black",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6509),
                            CssColor = "#000000"
                        },
                        new
                        {
                            Id = 3,
                            ColorName = "Blue",
                            CreatedDate = new DateTime(2024, 5, 4, 11, 40, 14, 123, DateTimeKind.Local).AddTicks(6509),
                            CssColor = "#0000FF"
                        });
                });

            modelBuilder.Entity("App.Data.Entities.AppNews", b =>
                {
                    b.HasOne("App.Data.Entities.AppNewsCategory", "NewsCategory")
                        .WithMany("NewsNavigation")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("App.Data.Entities.AppUser", "Users")
                        .WithMany("AppNewsNavigation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("NewsCategory");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("App.Data.Entities.AppOrder", b =>
                {
                    b.HasOne("App.Data.Entities.AppUser", "Customer")
                        .WithMany("OwnerOrders")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("App.Data.Entities.AppDiscountCode", "AppDiscountCode")
                        .WithMany("AppOrders")
                        .HasForeignKey("DiscountCodeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("App.Data.Entities.AppUser", "Employee")
                        .WithMany("VerifiedOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App.Data.Entities.MstOrderStatus", "MstOrderStatus")
                        .WithMany("AppOrders")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AppDiscountCode");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("MstOrderStatus");
                });

            modelBuilder.Entity("App.Data.Entities.AppOrderDetail", b =>
                {
                    b.HasOne("App.Data.Entities.AppOrder", "AppOrder")
                        .WithMany("AppOrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("App.Data.Entities.Products.AppProductDetail", "AppProdcutDetail")
                        .WithMany("AppOrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AppOrder");

                    b.Navigation("AppProdcutDetail");
                });

            modelBuilder.Entity("App.Data.Entities.AppPolicy", b =>
                {
                    b.HasOne("App.Data.Entities.AppUser", "User")
                        .WithMany("AppPolicyNavigation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("App.Data.Entities.AppProductCategory", b =>
                {
                    b.HasOne("App.Data.Entities.AppProductCategory", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("App.Data.Entities.AppRolePermission", b =>
                {
                    b.HasOne("App.Data.Entities.AppRole", "AppRole")
                        .WithMany("AppRolePermissions")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Data.Entities.MstPermission", "MstPermission")
                        .WithMany("AppRolePermissions")
                        .HasForeignKey("MstPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("MstPermission");
                });

            modelBuilder.Entity("App.Data.Entities.AppSlider", b =>
                {
                    b.HasOne("App.Data.Entities.AppProductCategory", "ProductCategory")
                        .WithMany("AppSlider")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("App.Data.Entities.AppUser", b =>
                {
                    b.HasOne("App.Data.Entities.AppRole", "AppRole")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppRoleId");

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("App.Data.Entities.AppVerifyCode", b =>
                {
                    b.HasOne("App.Data.Entities.AppUser", "AppUser")
                        .WithMany("AppVerifyCodeNavigation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProduct", b =>
                {
                    b.HasOne("App.Data.Entities.AppProductCategory", "AppProdcutCategory")
                        .WithMany("AppProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AppProdcutCategory");
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProductDetail", b =>
                {
                    b.HasOne("App.Data.Entities.Products.MstProductColor", "MstProductColor")
                        .WithMany("AppProdcutDetails")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("App.Data.Entities.Products.AppProduct", "AppProduct")
                        .WithMany("AppProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AppProduct");

                    b.Navigation("MstProductColor");
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProductImage", b =>
                {
                    b.HasOne("App.Data.Entities.Products.AppProduct", "Product")
                        .WithMany("AppProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("App.Data.Entities.AppDiscountCode", b =>
                {
                    b.Navigation("AppOrders");
                });

            modelBuilder.Entity("App.Data.Entities.AppNewsCategory", b =>
                {
                    b.Navigation("NewsNavigation");
                });

            modelBuilder.Entity("App.Data.Entities.AppOrder", b =>
                {
                    b.Navigation("AppOrderDetails");
                });

            modelBuilder.Entity("App.Data.Entities.AppProductCategory", b =>
                {
                    b.Navigation("AppProducts");

                    b.Navigation("AppSlider");

                    b.Navigation("ChildCategories");
                });

            modelBuilder.Entity("App.Data.Entities.AppRole", b =>
                {
                    b.Navigation("AppRolePermissions");

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("App.Data.Entities.AppUser", b =>
                {
                    b.Navigation("AppNewsNavigation");

                    b.Navigation("AppPolicyNavigation");

                    b.Navigation("AppVerifyCodeNavigation");

                    b.Navigation("OwnerOrders");

                    b.Navigation("VerifiedOrders");
                });

            modelBuilder.Entity("App.Data.Entities.MstOrderStatus", b =>
                {
                    b.Navigation("AppOrders");
                });

            modelBuilder.Entity("App.Data.Entities.MstPermission", b =>
                {
                    b.Navigation("AppRolePermissions");
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProduct", b =>
                {
                    b.Navigation("AppProductDetails");

                    b.Navigation("AppProductImages");
                });

            modelBuilder.Entity("App.Data.Entities.Products.AppProductDetail", b =>
                {
                    b.Navigation("AppOrderDetails");
                });

            modelBuilder.Entity("App.Data.Entities.Products.MstProductColor", b =>
                {
                    b.Navigation("AppProdcutDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
